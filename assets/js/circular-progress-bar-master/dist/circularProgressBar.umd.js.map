{"version":3,"file":"circularProgressBar.umd.js","sources":["../sources/helpers/defaults.js","../sources/helpers/function.js","../sources/index.js"],"sourcesContent":["/**\r\n * @typedef {Object} - Default object\r\n * @prop {String} [colorSlice] - Progress color circle\r\n * @prop {String} [fontColor] - Font color\r\n * @prop {String} [fontSize] - Font size\r\n * @prop {Number} [fontWeight] - Font weight\r\n * @prop {Array} [linearGradient] - Linear gradien for circle\r\n * @prop {Boolean} [number] - Show/hide number\r\n * @prop {Boolean} [round] - Path rounding\r\n * @prop {String} [fill] - Inner circle color\r\n * @prop {String} [unit] - Different unit instead of percentage (%) inside the circle\r\n * @prop {Number} [rotation] - Chart rotation\r\n * @prop {Number} [size] - Size progress bar width and height in px\r\n * @prop {Number} [stroke] - Stroke width, chart thickness\r\n */\r\n/**\r\n * Returns the default options of the component\r\n * @return {CPBOptions}\r\n */\r\nconst defaultOptions = {\r\n  colorSlice: '#00a1ff',\r\n  fontColor: '#000',\r\n  fontSize: '1.6rem',\r\n  fontWeight: 400,\r\n  lineargradient: false,\r\n  number: true,\r\n  round: false,\r\n  fill: 'none',\r\n  unit: '%',\r\n  rotation: -90,\r\n  size: 200,\r\n  stroke: 10,\r\n};\r\n\r\nexport default defaultOptions;\r\n","/**\r\n *\r\n * @param {Object} object\r\n * @returns {String}\r\n */\r\nconst styleTransform = ({ rotation, animationSmooth }) => {\r\n  const smoothAnimation = animationSmooth\r\n    ? `transition: stroke-dashoffset ${animationSmooth}`\r\n    : '';\r\n\r\n  return `transform:rotate(${rotation}deg);transform-origin: 50% 50%;${smoothAnimation}`;\r\n};\r\n\r\n/**\r\n * Set \"stroke-dasharray\": \"1, 2\"\r\n * @param {String} type\r\n * @returns {Object}\r\n */\r\nconst strokeDasharray = (type) => {\r\n  return {\r\n    'stroke-dasharray': type || '264',\r\n  };\r\n};\r\n\r\n/**\r\n * Set type stroke-linecap\r\n * @param {String} round\r\n * @returns {Object}\r\n */\r\nconst strokeLinecap = ({ round }) => {\r\n  return {\r\n    'stroke-linecap': round ? 'round' : '',\r\n  };\r\n};\r\n\r\n/**\r\n * Set font sieze/weight\r\n *\r\n * @param {Object} options\r\n * @returns {Object}\r\n */\r\nconst fontSettings = (options) => {\r\n  return {\r\n    'font-size': options.fontSize,\r\n    'font-weight': options.fontWeight,\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param {String} element\r\n * @returns {HTMLElement}\r\n */\r\nconst querySelector = (element) => document.querySelector(element);\r\n\r\n/**\r\n * Set color or linear-gradient\r\n *\r\n * @param {String} element\r\n * @param {Object} object\r\n */\r\nconst setColor = (element, { lineargradient, index, colorSlice }) => {\r\n  element.setAttribute(\r\n    'stroke',\r\n    lineargradient ? `url(#linear-${index})` : colorSlice\r\n  );\r\n};\r\n\r\n/**\r\n * Set attribute to specific element\r\n *\r\n * @param {String} element\r\n * @param {Object} object\r\n */\r\nconst setAttribute = (element, object) => {\r\n  for (const key in object) {\r\n    element?.setAttribute(key, object[key]);\r\n  }\r\n};\r\n\r\n/**\r\n * Create svg element\r\n *\r\n * @param {String} type\r\n * @returns {SVGElement}\r\n */\r\nconst createNSElement = (type) =>\r\n  document.createElementNS('http://www.w3.org/2000/svg', type);\r\n\r\n/**\r\n * Create svg tspan\r\n *\r\n * @param {String} className\r\n * @param {String} unit\r\n * @returns {HTMLElement}\r\n */\r\nconst tspan = (className, unit) => {\r\n  const element = createNSElement('tspan');\r\n\r\n  element.classList.add(className);\r\n  if (unit) element.textContent = unit;\r\n  return element;\r\n};\r\n\r\n/**\r\n * Function generate stroke-dashoffset\r\n *\r\n * @param {Number} count\r\n * @param {Boolean} inverse - Counterclockwise animation\r\n * @param {Number} cut - Angle of the circle sector\r\n * @returns {Number}\r\n */\r\nconst dashOffset = (count, inverse, cut) => {\r\n  const cutChar = cut ? (264 / 100) * (100 - cut) : 264;\r\n  const angle = 264 - (count / 100) * cutChar;\r\n\r\n  return inverse ? -angle : angle;\r\n};\r\n\r\n/**\r\n * @param {HTMLElement} element\r\n * @param {HTMLElement} el\r\n * @param {String} type\r\n */\r\nconst insertAdElement = (element, el, type = 'beforeend') =>\r\n  element.insertAdjacentElement(type, el);\r\n\r\n/**\r\n * Generator function linear-gradient stop svg elements\r\n *\r\n * @param {Object} object\r\n */\r\nconst gradient = ({ index, lineargradient }) => {\r\n  const defsElement = createNSElement('defs');\r\n  const linearGradient = createNSElement('linearGradient');\r\n  linearGradient.id = `linear-${index}`;\r\n\r\n  const countGradient = [].slice.call(lineargradient);\r\n\r\n  defsElement.appendChild(linearGradient);\r\n\r\n  let number = 0;\r\n  countGradient.map((item) => {\r\n    const stopElements = createNSElement('stop');\r\n\r\n    const stopObj = {\r\n      offset: `${number}%`,\r\n      'stop-color': `${item}`,\r\n    };\r\n    setAttribute(stopElements, stopObj);\r\n\r\n    linearGradient.appendChild(stopElements);\r\n    number += 100 / (countGradient.length - 1);\r\n  });\r\n\r\n  return defsElement;\r\n};\r\n\r\n/**\r\n * A function that generates tspan\r\n * elements with a number and unit\r\n *\r\n * @param {Object} options - Global configuration\r\n * @param {String} className\r\n */\r\nconst percent = (options, className) => {\r\n  const creatTextElementSVG = createNSElement('text');\r\n\r\n  creatTextElementSVG.classList.add(`${className}-text-${options.index}`);\r\n\r\n  // create tspan element with number\r\n  // and insert to svg text element\r\n  insertAdElement(\r\n    creatTextElementSVG,\r\n    tspan(`${className}-percent-${options.index}`)\r\n  );\r\n\r\n  // create and insert unit to text element\r\n  insertAdElement(\r\n    creatTextElementSVG,\r\n    tspan(`${className}-unit-${options.index}`, options.unit)\r\n  );\r\n\r\n  // config to svg text\r\n  const obj = {\r\n    x: '50%',\r\n    y: '50%',\r\n    fill: options.fontColor,\r\n    'text-anchor': 'middle',\r\n    dy: options.textPosition || '0.35em',\r\n    ...fontSettings(options),\r\n  };\r\n\r\n  setAttribute(creatTextElementSVG, obj);\r\n  return creatTextElementSVG;\r\n};\r\n\r\nexport {\r\n  createNSElement,\r\n  dashOffset,\r\n  fontSettings,\r\n  gradient,\r\n  insertAdElement,\r\n  percent,\r\n  querySelector,\r\n  setAttribute,\r\n  setColor,\r\n  strokeDasharray,\r\n  strokeLinecap,\r\n  styleTransform,\r\n};\r\n","import defaultOptions from \"./helpers/defaults\";\r\nimport {\r\n  createNSElement,\r\n  dashOffset,\r\n  fontSettings,\r\n  gradient,\r\n  insertAdElement,\r\n  percent,\r\n  querySelector,\r\n  setAttribute,\r\n  setColor,\r\n  strokeDasharray,\r\n  strokeLinecap,\r\n  styleTransform,\r\n} from \"./helpers/function\";\r\n\r\n/**\r\n * @class\r\n */\r\nexport default class CircularProgressBar {\r\n  /**\r\n   * CircularProgressBar constructor\r\n   *\r\n   * @param {String} pieName - class name\r\n   * @param {Object} globalObj - global configuration\r\n   */\r\n  constructor(pieName, globalObj = {}) {\r\n    this._className = pieName;\r\n    this._globalObj = globalObj;\r\n\r\n    const pieElements = document.querySelectorAll(`.${pieName}`);\r\n    const elements = [].slice.call(pieElements);\r\n    // add index to all progressbar\r\n    elements.map((item, idx) => {\r\n      const id = JSON.parse(item.getAttribute(\"data-pie\"));\r\n      item.setAttribute(\r\n        \"data-pie-index\",\r\n        id.index || globalObj.index || idx + 1\r\n      );\r\n    });\r\n\r\n    this._elements = elements;\r\n  }\r\n\r\n  /**\r\n   * @param {object} outside\r\n   */\r\n  initial(outside) {\r\n    const triggeredOutside = outside || this._elements;\r\n    Array.isArray(triggeredOutside)\r\n      ? triggeredOutside.map((element) => this._createSVG(element))\r\n      : this._createSVG(triggeredOutside);\r\n  }\r\n\r\n  /**\r\n   * @param {SVGAElement} svg\r\n   * @param {HTMLElement} target\r\n   * @param {Object} options\r\n   */\r\n  _progress(svg, target, options) {\r\n    const pieName = this._className;\r\n    if (options.number) {\r\n      insertAdElement(svg, percent(options, pieName));\r\n    }\r\n\r\n    const progressCircle = querySelector(`.${pieName}-circle-${options.index}`);\r\n\r\n    const configCircle = {\r\n      fill: \"none\",\r\n      \"stroke-width\": options.stroke,\r\n      \"stroke-dashoffset\": \"264\",\r\n      ...strokeDasharray(),\r\n      ...strokeLinecap(options),\r\n    };\r\n    setAttribute(progressCircle, configCircle);\r\n\r\n    // animation progress\r\n    this.animationTo({ ...options, element: progressCircle }, true);\r\n\r\n    // set style and rotation\r\n    progressCircle.setAttribute(\"style\", styleTransform(options));\r\n\r\n    // set color\r\n    setColor(progressCircle, options);\r\n\r\n    // set width and height on div\r\n    target.setAttribute(\r\n      \"style\",\r\n      `width:${options.size}px;height:${options.size}px;`\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Callback function\r\n   *\r\n   * @param {Object} options\r\n   * @param {Boolean} initial\r\n   */\r\n  animationTo(options, initial = false) {\r\n    const pieName = this._className;\r\n    const previousConfigObj = JSON.parse(\r\n      querySelector(`[data-pie-index=\"${options.index}\"]`).getAttribute(\r\n        \"data-pie\"\r\n      )\r\n    );\r\n\r\n    const circleElement = querySelector(`.${pieName}-circle-${options.index}`);\r\n\r\n    if (!circleElement) return;\r\n\r\n    // merging all configuration objects\r\n    const commonConfiguration = initial\r\n      ? options\r\n      : {\r\n          ...defaultOptions,\r\n          ...previousConfigObj,\r\n          ...options,\r\n          ...this._globalObj,\r\n        };\r\n\r\n    // update color circle\r\n    if (!initial) {\r\n      setColor(circleElement, commonConfiguration);\r\n    }\r\n\r\n    // font color update\r\n    if (!initial && commonConfiguration.number) {\r\n      const fontconfig = {\r\n        fill: commonConfiguration.fontColor,\r\n        ...fontSettings(commonConfiguration),\r\n      };\r\n      const textElement = querySelector(\r\n        `.${pieName}-text-${commonConfiguration.index}`\r\n      );\r\n      setAttribute(textElement, fontconfig);\r\n    }\r\n\r\n    const centerNumber = querySelector(`.${pieName}-percent-${options.index}`);\r\n\r\n    if (commonConfiguration.animationOff) {\r\n      if (commonConfiguration.number)\r\n        centerNumber.textContent = `${commonConfiguration.percent}`;\r\n      circleElement.setAttribute(\r\n        \"stroke-dashoffset\",\r\n        dashOffset(commonConfiguration.percent, commonConfiguration.inverse)\r\n      );\r\n      return;\r\n    }\r\n\r\n    // get numer percent from data-angel\r\n    let angle = JSON.parse(circleElement.getAttribute(\"data-angel\"));\r\n\r\n    // round if number is decimal\r\n    const percent = Math.round(options.percent);\r\n\r\n    // if percent 0 then set at start 0%\r\n    if (percent == 0) {\r\n      if (commonConfiguration.number) centerNumber.textContent = \"0\";\r\n      circleElement.setAttribute(\"stroke-dashoffset\", \"264\");\r\n    }\r\n\r\n    if (percent > 100 || percent <= 0 || angle === percent) return;\r\n\r\n    let request;\r\n    let i = initial ? 0 : angle;\r\n\r\n    const fps = commonConfiguration.speed || 1000;\r\n    const interval = 1000 / fps;\r\n    const tolerance = 0.1;\r\n    let then = performance.now();\r\n\r\n    const performAnimation = (now) => {\r\n      request = requestAnimationFrame(performAnimation);\r\n      const delta = now - then;\r\n\r\n      if (delta >= interval - tolerance) {\r\n        then = now - (delta % interval);\r\n\r\n        angle >= commonConfiguration.percent ? i-- : i++;\r\n      }\r\n\r\n      circleElement.setAttribute(\r\n        \"stroke-dashoffset\",\r\n        dashOffset(i, commonConfiguration.inverse, commonConfiguration.cut)\r\n      );\r\n      if (centerNumber && commonConfiguration.number) {\r\n        centerNumber.textContent = `${i}`;\r\n      }\r\n\r\n      circleElement.setAttribute(\"data-angel\", i);\r\n      circleElement.parentNode.setAttribute(\"aria-valuenow\", i);\r\n\r\n      if (i === percent) {\r\n        cancelAnimationFrame(request);\r\n      }\r\n    };\r\n\r\n    requestAnimationFrame(performAnimation);\r\n  }\r\n\r\n  /**\r\n   * Create svg elements\r\n   *\r\n   * @param {HTMLElement} element\r\n   */\r\n  _createSVG(element) {\r\n    const index = element.getAttribute(\"data-pie-index\");\r\n    const json = JSON.parse(element.getAttribute(\"data-pie\"));\r\n\r\n    const options = { ...defaultOptions, ...json, index, ...this._globalObj };\r\n\r\n    const svg = createNSElement(\"svg\");\r\n\r\n    const configSVG = {\r\n      role: \"progressbar\",\r\n      width: options.size,\r\n      height: options.size,\r\n      viewBox: \"0 0 100 100\",\r\n      \"aria-valuemin\": \"0\",\r\n      \"aria-valuemax\": \"100\",\r\n    };\r\n\r\n    setAttribute(svg, configSVG);\r\n\r\n    // colorCircle\r\n    if (options.colorCircle) {\r\n      svg.appendChild(this._circle(options));\r\n    }\r\n\r\n    // gradient\r\n    if (options.lineargradient) {\r\n      svg.appendChild(gradient(options));\r\n    }\r\n\r\n    svg.appendChild(this._circle(options, \"top\"));\r\n\r\n    element.appendChild(svg);\r\n\r\n    this._progress(svg, element, options);\r\n  }\r\n\r\n  /**\r\n   * Create circle top/bottom\r\n   *\r\n   * @param {Object} options\r\n   * @param {String} where\r\n   * @returns {SVGElement}\r\n   */\r\n  _circle(options, where = \"bottom\") {\r\n    const circle = createNSElement(\"circle\");\r\n\r\n    let configCircle = {};\r\n    if (options.cut) {\r\n      const dashoffset = 264 - (100 - options.cut) * 2.64;\r\n      configCircle = {\r\n        \"stroke-dashoffset\": options.inverse ? -dashoffset : dashoffset,\r\n        style: styleTransform(options),\r\n        ...strokeDasharray(),\r\n        ...strokeLinecap(options),\r\n      };\r\n    }\r\n\r\n    const objCircle = {\r\n      fill: options.fill,\r\n      stroke: options.colorCircle,\r\n      \"stroke-width\": options.strokeBottom || options.stroke,\r\n      ...configCircle,\r\n    };\r\n\r\n    if (options.strokeDasharray) {\r\n      Object.assign(objCircle, { ...strokeDasharray(options.strokeDasharray) });\r\n    }\r\n\r\n    const typeCircle =\r\n      where === \"top\"\r\n        ? { class: `${this._className}-circle-${options.index}` }\r\n        : objCircle;\r\n\r\n    const objConfig = {\r\n      cx: \"50%\",\r\n      cy: \"50%\",\r\n      r: 42,\r\n      \"shape-rendering\": \"geometricPrecision\",\r\n      ...typeCircle,\r\n    };\r\n\r\n    setAttribute(circle, objConfig);\r\n\r\n    return circle;\r\n  }\r\n}\r\n"],"names":["defaultOptions","colorSlice","fontColor","fontSize","fontWeight","lineargradient","number","round","fill","unit","rotation","size","stroke","styleTransform","animationSmooth","smoothAnimation","strokeDasharray","type","strokeLinecap","fontSettings","options","querySelector","element","document","setColor","index","setAttribute","object","key","createNSElement","createElementNS","tspan","className","classList","add","textContent","dashOffset","count","inverse","cut","cutChar","angle","insertAdElement","el","insertAdjacentElement","gradient","defsElement","linearGradient","id","countGradient","slice","call","appendChild","map","item","stopElements","stopObj","offset","length","percent","creatTextElementSVG","obj","x","y","dy","textPosition","CircularProgressBar","constructor","pieName","globalObj","_className","_globalObj","pieElements","querySelectorAll","elements","idx","JSON","parse","getAttribute","_elements","initial","outside","triggeredOutside","Array","isArray","_createSVG","_progress","svg","target","progressCircle","configCircle","animationTo","previousConfigObj","circleElement","commonConfiguration","fontconfig","textElement","centerNumber","animationOff","Math","request","i","fps","speed","interval","tolerance","then","performance","now","performAnimation","requestAnimationFrame","delta","parentNode","cancelAnimationFrame","json","configSVG","role","width","height","viewBox","colorCircle","_circle","where","circle","dashoffset","style","objCircle","strokeBottom","Object","assign","typeCircle","class","objConfig","cx","cy","r"],"mappings":"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"}